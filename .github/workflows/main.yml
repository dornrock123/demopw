name: Run API, Web, and Playwright Tests

on:
  push:
    branches:
      - dorn-ci
  pull_request:
    branches:
      - dorn-ci
      
  workflow_dispatch:
    inputs:
      api_branch:
        description: 'API branch to checkout'
        required: true
        default: 'main'
      web_branch:
        description: 'Web branch to checkout'
        required: true
        default: 'dorn-ci'

jobs:
  run-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout API repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.api_branch || 'main' }}
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Build and Run Spring Boot API
        run: |
          mvn clean install
          nohup mvn spring-boot:run > /dev/null 2>&1 &

  run-web-and-test:
    needs: run-api
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Web repository
        uses: actions/checkout@v3
        with:
          repository: Theerapat-dev/PresidentDemo-Web
          token: ${{ secrets.GH_PAT }}
          ref: ${{ github.event.inputs.web_branch || 'dorn-ci' }}
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Set npm registry
        run: npm config set registry https://registry.npmjs.org/
      - name: Install dependencies
        run: npm install --force
      - name: Start the app
        run: |
          npm start &
          npx wait-on http://localhost:4200
        env:
          PORT: 4200
      - name: Install Playwright
        run: npx playwright install
      - name: Run Playwright tests
        id: run-tests
        run: |
          npx playwright test --output=results.json || exit 1
          if jq -e '.[] | select(.status == "failed")' results.json > /dev/null; then
            echo "Tests failed."
            exit 1
          else
            echo "Tests passed."
          fi
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-results
          path: results.json

  notify:
    needs: run-web-and-test
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Playwright Test Failure Notification
          to: ditoey2002@gmail.com
          from: krisd3214@gmail.com
          body: |
            The Playwright tests have failed. Please check the attached results for more information.
          attachments: results.json
